{"version":3,"sources":["ido/index.module.css","asset/king.jpg","asset/question.jpg","asset/pdk-sougou.png","asset/pdk.svg","asset/pay.gif","utils/eth-utils.js","constants.js","ido/index.js","reportWebVitals.js","index.js"],"names":["module","exports","isConnected2MetaMask","a","window","ethereum","request","method","accounts","length","sendTransaction","signer","provider","transaction","tx","waitForTransaction","hash","receipt","constants","myAddr","ethers","web3Reducer","state","action","type","isWeb3","isEnabled","account","network","balance","Error","dappReducer","isConnecting","initialDappState","initialWeb3State","AddressZero","App","useReducer","web3State","web3Dispatch","dappState","dappDispatch","useEffect","isConnected","connect2MetaMask","connect2Provider","providers","Web3Provider","getSigner","getNetwork","getBalance","_balance","utils","formatEther","donate","alert","to","CONSTANTS","value","parseEther","String","JSON","stringify","className","styles","idoWarper","imgWarper","src","king","alt","question","pdkSvg","logo","pdkSougou","pay","button","onClick","createAt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1c58aba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"idoWarper\":\"ido_idoWarper__15LEE\",\"imgWarper\":\"ido_imgWarper__22HXI\",\"logo\":\"ido_logo__ZNEG0\",\"createAt\":\"ido_createAt__E5mfV\",\"button\":\"ido_button__11xKR\",\"pdkSougou\":\"ido_pdkSougou__Vi3-E\"};","export default __webpack_public_path__ + \"static/media/king.ba2765b1.jpg\";","export default __webpack_public_path__ + \"static/media/question.eff49360.jpg\";","export default __webpack_public_path__ + \"static/media/pdk-sougou.b47b2efc.png\";","export default __webpack_public_path__ + \"static/media/pdk.5dcce691.svg\";","export default __webpack_public_path__ + \"static/media/pay.8e68b2df.gif\";","export const isConnected2MetaMask = async () => {\n  //  If not connected accounts will be an empty array\n  const accounts = await window.ethereum.request({\n    method: 'eth_accounts',\n  })\n  if (accounts.length === 0) {\n    return null\n  }\n  return accounts[0]\n}\n\n// send `transaction`, so ethers, from signer address\nexport const sendTransaction = async (signer, provider, transaction) => {\n  try {\n    // send the transaction and return a transaction response\n    const tx = await signer.sendTransaction(transaction)\n    // wait for tx.hash to be mined with 3 block validation and a timeout of 120 seconds\n    // if succeed returns a receipt of the transaction\n    const receipt = await provider.waitForTransaction(tx.hash, 3, 120000)\n    return receipt\n  } catch (e) {\n    return null\n  }\n}\n","const constants = {\n  myAddr: '0x3A3c02343A6Aa33fF7a6E5da01c1d532CDc52643',\n}\n\nexport default constants;\n","import React, { useEffect, useReducer } from 'react'\n\nimport { ethers } from 'ethers';\nimport king from '../asset/king.jpg';\nimport question from '../asset/question.jpg';\nimport pdkSougou from '../asset/pdk-sougou.png';\nimport pdkSvg from '../asset/pdk.svg';\nimport pay from '../asset/pay.gif';\nimport styles from './index.module.css';\n\nimport { isConnected2MetaMask, sendTransaction } from '../utils/eth-utils';\nimport CONSTANTS from '../constants';\n\nwindow.ethers = ethers;\n\nconst web3Reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_isWeb3':\n      return { ...state, isWeb3: action.isWeb3 }\n    case 'SET_isEnabled':\n      return { ...state, isEnabled: action.isEnabled }\n    case 'SET_account':\n      return { ...state, account: action.account }\n    case 'SET_provider':\n      return { ...state, provider: action.provider }\n    case 'SET_network':\n      return { ...state, network: action.network }\n    case 'SET_signer':\n      return { ...state, signer: action.signer }\n    case 'SET_balance':\n      return { ...state, balance: action.balance }\n    default:\n      throw new Error(`Unhandled action ${action.type} in web3Reducer`)\n  }\n}\n\nconst dappReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_isConnecting':\n      return { ...state, isConnecting: action.isConnecting }\n    default:\n      throw new Error(`Unhandled action ${action.type} in dappReducer`)\n  }\n}\n\nconst initialDappState = {\n  isConnecting: false,\n}\n\nconst initialWeb3State = {\n  isWeb3: false,\n  isEnabled: false,\n  account: ethers.constants.AddressZero,\n  provider: null,\n  signer: null,\n  network: null,\n  balance: '0',\n}\n\n\nfunction App() {\n  const [web3State, web3Dispatch] = useReducer(web3Reducer, initialWeb3State);\n  const [dappState, dappDispatch] = useReducer(dappReducer, initialDappState);\n\n  window.web3State = web3State;\n  window.dappState = dappState;\n\n  const handleOnConnect = () => {\n    if (!web3State.isEnabled)\n      dappDispatch({ type: 'SET_isConnecting', isConnecting: true })\n  }\n\n  // Check if Web3 is injected\n  useEffect(() => {\n    if (typeof ethereum !== 'undefined') {\n      web3Dispatch({ type: 'SET_isWeb3', isWeb3: true })\n    } else {\n      web3Dispatch({ type: 'SET_isWeb3', isWeb3: false })\n    }\n  }, [])\n\n  // Check if already connected to MetaMask\n  useEffect(() => {\n    const isConnected = async () => {\n      const account = await isConnected2MetaMask()\n      if (account) {\n        web3Dispatch({ type: 'SET_isEnabled', isEnabled: true })\n        web3Dispatch({ type: 'SET_account', account: account })\n      } else {\n        web3Dispatch({ type: 'SET_isEnabled', isEnabled: false })\n      }\n    }\n    if (web3State.isWeb3) {\n      isConnected()\n    }\n  }, [web3State.isWeb3])\n\n  //If not connected to metamask connect with button\n  useEffect(() => {\n    const connect2MetaMask = async () => {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts',\n        })\n        web3Dispatch({ type: 'SET_isEnabled', isEnabled: true })\n        web3Dispatch({ type: 'SET_account', account: accounts[0] })\n      } catch (e) {\n        web3Dispatch({\n          type: 'SET_account',\n          account: ethers.constants.AddressZero,\n        })\n        web3Dispatch({ type: 'SET_isEnabled', isEnabled: false })\n      } finally {\n        dappDispatch({ type: 'SET_isConnecting', isConnecting: false })\n      }\n    }\n\n    if (web3State.isWeb3 && dappState.isConnecting && !web3State.isEnabled) {\n      connect2MetaMask()\n    }\n  }, [web3State.isWeb3, dappState.isConnecting, web3State.isEnabled])\n\n  // Connect to provider\n  useEffect(() => {\n    const connect2Provider = async () => {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        web3Dispatch({ type: 'SET_provider', provider: provider })\n        const signer = provider.getSigner()\n        web3Dispatch({ type: 'SET_signer', signer: signer })\n        // https://docs.ethers.io/v5/api/providers/provider/#Provider-getBalance\n        const network = await provider.getNetwork()\n        web3Dispatch({ type: 'SET_network', network: network })\n        // https://docs.ethers.io/v5/api/providers/provider/#Provider-getBalance\n        const _balance = await provider.getBalance(web3State.account)\n        // https://docs.ethers.io/v5/api/utils/display-logic/#utils-formatEther\n        const balance = ethers.utils.formatEther(_balance)\n        web3Dispatch({ type: 'SET_balance', balance: balance })\n      } catch (e) {\n        web3Dispatch({ type: 'SET_network', network: initialWeb3State.network })\n        web3Dispatch({ type: 'SET_balance', balance: initialWeb3State.balance })\n      }\n    }\n\n    if (\n      web3State.isEnabled &&\n      web3State.account !== ethers.constants.AddressZero\n    ) {\n      connect2Provider()\n    }\n  }, [web3State.isEnabled, web3State.account])\n\n  const donate = async () => {\n    if (web3State.balance < 0.011) {\n      alert('不够足够的HT打款');\n      return;\n    }\n\n    try {\n      const tx = await sendTransaction(\n        web3State.signer,\n        web3State.provider,\n        {\n          to: CONSTANTS.myAddr,\n          value: ethers.utils.parseEther(String('0.011')),\n        }\n      );\n\n      if (tx) {\n        alert('成功了，谢谢');\n      }\n      else {\n        alert('失败了');\n      }\n    } catch (error) {\n      alert(JSON.stringify(error));\n    }\n  }\n\n  return (\n    <div className={styles.idoWarper}>\n      <div className={styles.imgWarper}>\n        <div><img src={king} alt=\"king\" /></div>\n        <div><img src={question} alt=\"king\" /></div>\n      </div>\n\n      <div>\n        <section>\n          <h3>发行什么币</h3>\n          <div>\n            <img src={pdkSvg} alt=\"\" className={styles.logo} />\n          </div>\n          <div>即将发行一个数字货币，但是为了群众的参与感（打钱），就简单粗暴试试募资。</div>\n          <div>这个币叫做PDK，暂且定义为：跑得快。</div>\n          <div>看图，你也可以将它定义为其他名字。</div>\n          <div>\n            <img src={pdkSougou} alt=\"\" className={styles.pdkSougou} />\n          </div>\n        </section>\n\n        <section>\n          <h3>关于这个币</h3>\n          <div>目前该币尚未发行，合约地址也还没有，等后期发行了，会在这里公布。</div>\n          <div>假如现有PDK这个币，都不是这里面提到的PDK。</div>\n          <div>发行总额为1万亿个（上限）？还是一亿个（下限）？太多0了有点看不过来。</div>\n          <div>发行个数为1亿至一万亿个之间，由社区讨论决定。</div>\n        </section>\n\n        <section>\n          <h3>募资金额</h3>\n          <div>最低目标是筹备1HT。</div>\n          <div>最高目标：无。</div>\n          <div>如果募资高于两倍HT，那么开发者将截留1HT最为最初的买域名费用（假如后期买的话）。</div>\n          <div>每次募资金额为0.011HT，不等于这个金额的，将当成无偿捐赠，由社区决定如何使用。</div>\n          <div>每个账号没有限制打多少次，多次打将记录为一次。</div>\n          <div>剩余HT将扣除手续费和50%的币加入LP池，</div>\n          <div>并且马上将LP池打到黑洞地址，这里是马上打到黑洞。</div>\n          <div>假如募资金额过大，例如大于1000HT（此处尚未决定lp上限），</div>\n          <div>那么最多将1000HT放入LP池子，剩余的部分同样由社区决定如何使用。</div>\n          <div>对于每个参与打款的账号，将在该币发行的时候，象征性给每个人打1个PDK。</div>\n          <div>反正募资的那个0.011HT肯定能买不少的，不要期望募资的币能卖回本。</div>\n        </section>\n\n        <section>\n          <h3>募资失败？</h3>\n          <div>如果最后募集失败，将每人募集的0.01原路打回，0.001作为手续费。</div>\n          <div>加入没任何人参与这个募资，那这个币还是不发行了。</div>\n          <div>为啥募资失败就不发行？因为如果没有人知道，那这个发行了也没用。</div>\n          <div>如果你捐赠后又反悔了，请在添加LP之前邮箱联系。<br />开发者将扣除手续费之后原路打回。</div>\n        </section>\n\n        <section>\n          <h3>有没有审计？</h3>\n          <div>没有。</div>\n          <div>这份代码将直接fork某个通缩币的方式来发行。</div>\n          <div>目前借鉴的火币链的DOG，但是会去掉交易里面加流动池的行为。</div>\n          <div>预期是通缩+持有就分红机制。</div>\n        </section>\n\n        <section>\n          <h3>这个币的意义？</h3>\n          <div>可能只是一个游戏。</div>\n          <div>按照理论来说，只要我跑得足够快，庄家会不会割到我。</div>\n          <div>如果你是第一个跑进去的，那么你就是庄家。</div>\n          <div>但是，谁会笑到最后呢？</div>\n          <div>假如全部人都跑了，那么没跑的那个就是庄家了。</div>\n          <div>这时候需要你重新宣传它。</div>\n          <div>这将生生不息。</div>\n        </section>\n\n        <section>\n          <h3>所以</h3>\n          <div>\n            <img src={pay} alt=\"pay\" />\n          </div>\n          <br />\n          <div>打款到: {CONSTANTS.myAddr}</div>\n\n          {\n          web3State.isEnabled &&\n          web3State.network !== null &&\n          web3State.account !== ethers.constants.AddressZero && (\n            <div>\n              <div>你的余额: {web3State.balance}HT</div>\n              <br />\n              <div className={styles.button} onClick={donate}>打款 0.011 HT</div>\n            </div>\n          )}\n\n          {!web3State.isEnabled && (\n            <div className={styles.button} onClick={handleOnConnect}>链接钱包</div>\n          )}\n        </section>\n      </div>\n\n      <div className={styles.createAt}>\n        此信息创建于：2021年04月22日。<br />\n        如有疑问，咨询： tokenpdk@gmial.com\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Ido from './ido';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Ido />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}